name: PBGC Automation CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  lint:
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: 3.12

    - name: Cache Python dependencies
      uses: actions/cache@v3
      with:
        path: ~\AppData\Local\pip\Cache
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
            
    - name: Install dependencies
      run: pip install flake8

    - name: Lint with flake8
      run: flake8 --statistics --exclude .venv/ --ignore E501

  build:
    needs: lint
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: 3.12
  
    - name: Cache Python dependencies
      uses: actions/cache@v3
      with:
        path: ~\AppData\Local\pip\Cache
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
  
    - name: Install dependencies
      run: |
        pip install -r requirements.txt
        pip install pyinstaller

    - name: Build Executable
      run: |
        pyinstaller --onefile --name BillsExcelAutomation main.py

    - name: Manually copy additional files
      run: |
        # Ensure the destination directories exist
        mkdir .\dist\config
        mkdir .\dist\input
        mkdir .\dist\output
    
        # Copy files and directories to the dist folder
        Copy-Item -Path .\config\sheet_template.xlsx -Destination .\dist\config\
        Copy-Item -Path .\readMe.md -Destination .\dist\
        Get-ChildItem -Path .\dist\ -Recurse

    - name: Create Release Directory
      run: |
        mkdir release
        dir # Debugging: List contents of the working directory

    - name: Zip Dist Folder
      run: |
        Compress-Archive -Path dist -DestinationPath release/dist.zip
        dir release # Debugging: List contents of release directory

    - name: Upload Dist Zip as Artifact
      uses: actions/upload-artifact@v3
      with:
        name: pbgc-billing-automation-build
        path: release/dist.zip

  release:
    needs: build
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
  
    - name: Extract version from README
      run: |
        echo "VERSION=$(grep -oP 'BillsAutomation v\K[\d.]+' ReadMe.md)" >> $GITHUB_ENV

    - name: Download Built Executable
      uses: actions/download-artifact@v3
      with:
        name: pbgc-billing-automation-build
  
    - name: List contents of the current directory # Debugging
      run: dir
  
    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        files: dist.zip
        tag_name: v${{ env.VERSION }}
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}